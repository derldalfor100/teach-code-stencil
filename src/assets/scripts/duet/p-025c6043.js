const e=(e,t,n)=>{let s;return"undefined"!=typeof MutationObserver&&(s=new MutationObserver(e=>{n(r(e,t))}),s.observe(e,{childList:!0,subtree:!0})),s},r=(e,r)=>{let n;return e.forEach(e=>{for(let s=0;s<e.addedNodes.length;s++)n=t(e.addedNodes[s],r)||n}),n},t=(e,r)=>{if(1===e.nodeType)return(e.tagName===r.toUpperCase()?[e]:Array.from(e.querySelectorAll(r))).find(e=>!0===e.checked)};export{t as f,e as w}