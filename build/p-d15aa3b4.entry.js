import{r as t,d as e,h as r}from"./p-178fb748.js";class a{async get(t){return fetch(t).then(t=>t.json()).then(t=>t).catch(t=>(console.warn("Error at FetchJson:",t),null))}}var s={xml2json:function t(e){return function(e){for(var r,a,s,n,o,l={};e.match(/<[^\/][^>]*>/);)r=(o=e.match(/<[^\/][^>]*>/)[0]).substring(1,o.length-1),-1==(a=e.indexOf(o.replace("<","</")))&&(r=o.match(/[^<][\w+$]*/)[0],-1==(a=e.indexOf("</"+r))&&(a=e.indexOf("<\\/"+r))),n=(s=e.substring(o.length,a)).match(/<[^\/][^>]*>/)?t(s):s,void 0===l[r]?l[r]=n:Array.isArray(l[r])?l[r].push(n):l[r]=[l[r],n],e=e.substring(2*o.length+1+s.length);return l}(e=function(t){return function(t){var e=t.match(/<[^\/][^>][^<]+\s+.[^<]+[=][^<]+>/g);if(e)for(var r=0;r<e.length;r++){var a=e[r],s="<"+a.match(/[^<][\w+$]*/)[0]+">",n=a.match(/(\S+)=["']?((?:.(?!["']?\s+(?:\S+)=|[>"']))+.)["']?/g);if(n)for(var o=0;o<n.length;o++){var l=n[o],i=l.substring(0,l.indexOf("="));s+="<"+i+">"+l.substring(l.indexOf('"')+1,l.lastIndexOf('"'))+"</"+i+">"}t=t.replace(a,s)}return t}(t=function(t){var e=t.match(/<[^\/][^>][^<]+\s+.[^<]+[=][^<]+>{1}([^<]+)/g);if(e)for(var r=0;r<e.length;r++){var a=e[r],s=a.substring(0,a.indexOf(">")+1),n=a.substring(a.indexOf(">")+1);t=t.replace(a,s+"<_@ttribute>"+n+"</_@ttribute>")}return t}(t=function(t){var e=t.match(/<[^/][^>]*\/>/g);if(e)for(var r=0;r<e.length;r++){var a=e[r],s=a.substring(0,a.length-2);s+=">";var n=a.match(/[^<][\w+$]*/)[0],o="</"+n+">",l="<"+n+">",i=s.match(/(\S+)=["']?((?:.(?!["']?\s+(?:\S+)=|[>"']))+.)["']?/g);if(i)for(var c=0;c<i.length;c++){var m=i[c],p=m.substring(0,m.indexOf("="));l+="<"+p+">"+m.substring(m.indexOf('"')+1,m.lastIndexOf('"'))+"</"+p+">"}t=t.replace(a,l+=o)}return t}(t=(t=(t=(t=(t=t.replace(/<!--[\s\S]*?-->/g,"")).replace(/\n|\t|\r/g,"")).replace(/ {1,}<|\t{1,}</g,"<")).replace(/> {1,}|>\t{1,}/g,">")).replace(/<\?[^>]*\?>/g,""))))}(e))}};class n{async getXml(t){const e=new window.DOMParser;return fetch(t).then(t=>t.text()).then(t=>e.parseFromString(t,"text/xml"))}async get(t){return fetch(t).then(t=>t.text()).then(t=>s.xml2json(t)).then(t=>t[Object.keys(t)[0]]).catch(t=>(console.warn("Error at FetchXml:",t),null))}}const o=class{constructor(e){t(this,e)}normalize(t){return t?t.substr(0,1).toUpperCase()+t.substr(1).toLowerCase():""}componentWillLoad(){this.fetchExample(),this.fetchXmlExample()}fetchExample(){setTimeout(async()=>{const t=new a,r=await t.get(e("../assets/json/example.json"));console.log("example:",r)},0)}fetchXmlExample(){setTimeout(async()=>{const t=new n,r=await t.getXml(e("../assets/xml/example.xml"));console.log("xml example:",r);const a=await t.get(e("../assets/xml/example.xml"));console.log("xml object example:",a)},0)}render(){if(this.match&&this.match.params.name)return r("div",{class:"app-profile"},r("p",null,"Hello! My name is ",this.normalize(this.match.params.name),". My name was passed in through a route param!"),r("h1",null,"Stencil App Starter"),r("img",{src:e("../assets/images/view.jpg"),alt:""}))}};o.style=".app-profile{padding:10px}";export{o as app_profile}